// При вызове функции мы можем передать определённые данные и принять их на стороне самой функции (a, b) и после выполнить с этими данными любую операцию: console.log(a + b);.

// данные, которые функция использует внутри себя называются «параметры функции»
function counter(a, b) {
  console.log(a + b);
}

// данные передаваемые в функцию в круглых скобках при её вызове называют «аргументом функции»
counter(1, 2);
counter(3, 8);
counter(115, 304);

// Но далеко не всегда функция выполняет такое тупиковое действие, как на примере выше. Гораздо чаще она возвращает что-то назад при помощи оператора return.
function counter2(a, b) {
  return a + b;
}

console.log(counter2(1, 2));

// 2 ВИДА ОБЪЯВЛЕНИЯ ФУНКЦИИ //

// 1) Function declaration. Характерные черты: "function", далее название функции, далее скобки с параметрами функции и далее тело функции в фигурных скобках.
function a() {
  console.log("a");
}

// 2) Function expression. Характерные черты: сперва объявляем переменную, далее анонимная функция (без имени), далее тело функции.
const b = function () {
  console.log("b");
};

a();
b();

// В современном JavaScript предпочтение отдают Function expression.

// Но и Function expression можно немного улучшить и сделаем 3-й вид - "Стрелочную функцию" и они немного отличаются от обычных функций:
const c = () => {
  console.log("c");
};

c();
